[STTModule]
# a module is two STT planes 
# each plane has 2 layers of straws oriented in the same direction and offset for a tight packing 
# each STTPlane is sandwiched between two radiators Polypropylene radiators
# in the default STT design the whole module is 7.6cm thick (though this is configurable in many ways below)
# the module is arranged in the (x,z) plane
class               = duneggd.Component.STTModule.STTModuleBuilder
subbuilders         = ['STTPlane1','STTPlane2']
Material	    = "Air"
modHalfX	    = Q('200cm')
modHalfZ	    = Q('130cm')
radiatorThickness   = Q("9mm")
planeWithRadiatorThickness={STTPlane1:planeThickness}+2*radiatorThickness
modGap		    = Q('0.268cm')
modWidth	    = 2*planeWithRadiatorThickness+modGap
planeCenter	    = planeWithRadiatorThickness/2.0 + modGap/2.0
halfDimension       = {'dx':modHalfX,'dy':modWidth/2.0,'dz':modHalfZ}
centerPlane1 	    =  [ Q("0m"), -planeCenter, Q("0m") ]
centerPlane2 	    =  [ Q("0m"), +planeCenter, Q("0m") ]
rotationPlane1	    = [ Q("0deg"), Q("0deg"), Q("0deg") ]
rotationPlane2	    = [ Q("0deg"), Q("90deg"), Q("0deg") ]
radiators	    = True
radiatorOffset	    = 0.5*{STTPlane1:planeThickness}+0.5*radiatorThickness
radiator1HalfDimension = [modHalfX,0.5*radiatorThickness,modHalfZ] # need to be kept in sync
radiator2HalfDimension = [modHalfZ,0.5*radiatorThickness,modHalfX] # with STTPlane1,2 settings... :(

[STTPlane1]
# a plane is two layers of straws oriented in the same direction and offset by 1 radius for a tight packing
class               = duneggd.Component.STTPlane.STTPlaneBuilder
subbuilders         = ['STTStraw1']
# planeThickness = width of plane packed with two planes of straws.
# each plane is like ooooo and the two are layered atop one another
# with the upper plane being shifted left by 1 radius to produce a tight packing
# this gives a width that is (2 + sqrt(3)) * straw radius
# (2 + sqrt(3)) = 3.732
planeThickness = 3.732*{STTStraw1:strawRadius}
halfDimension       = {'dx':{STTModule:modHalfX},'dy':planeThickness/2.0,'dz':{STTModule:modHalfZ}}
#rotation = {STTModule:rotationPlane1}
Material            = 'Air'
# NElements is the number of straws
# set to be equal to #planes * 2 * halflength perpendicular to straw run / straw diameter -1 = here it is 2 * 2 * 200 cm / 1cm /straw - 1 straw
# I would like to make it so that this isn't hardcoded but instead depends on the size of the planes and straws
# but that would mean doing some integer arithmetic (or moving NElements into the code... hmmm)
NElements           = 799

[STTPlane2]
class               = duneggd.Component.STTPlane.STTPlaneBuilder
subbuilders         = ['STTStraw2']
# note, the X vs Z swap is intentional here since plane 2 is rotated 90 degrees
# this is just needed to the way in which STTPlaneBuilder works
# it assumes straws are oriented to run along Z, so you have to build a plane
# that way and then rotate from the builder above it
halfDimension       = {'dx':{STTModule:modHalfZ},'dy':{STTPlane1:planeThickness}/2.0,'dz':{STTModule:modHalfX}}
#rotation = {STTModule:rotationPlane2}
Material            = 'Air'
NElements           = 519

[STTStraw1]
# construct straws for plane 1. They run along X so the module X halflength is
# used to determine the straw lengths here.
class               = duneggd.Active.StrawTube.StrawTubeBuilder
wallThickness	    = Q("70um")
strawRadius	    = Q("0.5cm")
halfDimension       = {'rmin':Q('0.0cm'), 'rmax':strawRadius, 'dz':{STTModule:modHalfZ}}
Material            = 'stGas_Ar'
halfSTDimension     = {'rmin':strawRadius-wallThickness, 'rmax':strawRadius, 'dz':{STTModule:modHalfZ}}
STMaterial          = 'Kapton'
halfWireDimension   = {'rmin':Q('0.0cm'), 'rmax':Q('20um'), 'dz':{STTModule:modHalfZ}}
WireMaterial        = 'Kapton'
Sensitive           = "StrawTracker"

[STTStraw2]
class               = duneggd.Active.StrawTube.StrawTubeBuilder
wallThickness	    = Q("70um")
strawRadius	    = Q("0.5cm")
halfDimension       = {'rmin':Q('0.0cm'), 'rmax':strawRadius, 'dz':{STTModule:modHalfX}}
Material            = 'stGas_Ar'
halfSTDimension     = {'rmin':strawRadius-wallThickness, 'rmax':strawRadius, 'dz':{STTModule:modHalfX}}
STMaterial          = 'Kapton'
halfWireDimension   = {'rmin':Q('0.0cm'), 'rmax':Q('20um'), 'dz':{STTModule:modHalfX}}
WireMaterial        = 'Kapton'
Sensitive           = "StrawTracker"
