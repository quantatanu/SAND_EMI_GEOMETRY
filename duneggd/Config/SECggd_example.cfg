#Loading the secondary detector, including ECal, MuID tracker and Magnet.
[Secondary]
class = duneggd.Det.Secondary2.Secondary2Builder
#subbuilders = ['MuIDBarrel', 'MuIDDownstream', 'MuIDUpstream', 'ECALDownstream', 'ECALUpstream', 'ECALBarrel', 'Magnet']
subbuilders = ['Magnet','ECALDownstream', 'ECALBarrel','ECALUpstream']
# we need to have a discussion over how to treat magnetic fields
# to issues:
#      (1) Everything in the constant field should share a mother volume where the field is set just once
#      (2) The field in the yoke is complicated and likely needs a special routine. At minimum the top and bottom need to be different than the sides, and the sides y>0 need to be different than y<0
# ideally there should be an overal volume for the detector in which we put the magnets, then an inner volume with a constant field.
# this way isn't the best
EcalBField              = "(0.4 T, 0.0 T, 0.0 T)"

eaclDownRot='noRotate'
eaclBarRot ='noRotate'
eaclUpRot = 'r180aboutY'

#place ecal so that the most downstream edge sits 0.5cm from the downstream coil
# can't make the line below work
#ecalDnZ={Magnet:actDimension}[0]/2.0-{ECALDownstream:modEcalThickness} -Q("0.5cm")
ecalDnZ=Q("720cm")/2.0-Q("70.5cm")/2.0-Q("0.5cm") # number here depend on numbers below...
ecalDnPos  = [Q('0.cm'),Q('0.cm'),ecalDnZ]

ecalUpZ=-Q("720cm")/2.0+Q("21.6cm")/2.0+Q("0.5cm") # number here depend on numbers below...
ecalUpPos  = [Q('0.cm'),Q('0.cm'),ecalUpZ]


#ecalBaOffset=Q("450cm")/2.0-Q("21.6cm")/2.0-Q("0.5cm")
ecalBaPos  = [Q("0cm"),Q("0cm"),Q('0.cm')]
magPos     = [Q('0.cm'),Q('0.cm'),Q('0.cm')]
#muidUpRot='noRotate'
#muidDownRot='r180aboutY'
#muidUpRot='noRotate'

###############################
# Dipole Magnet
###############################
[Magnet]
# see lbne doc-10942
class         = duneggd.SubDetector.Magnet.MagnetBuilder
actDimension  = [Q('112cm'),Q('400cm'),Q('720cm')] # inner coil dimensions
actDimensionB = [Q('450cm'),Q('500cm'),Q('99.5cm')] # inner yoke dimensions
actThickness  = Q('50cm') # thickness of the coil
actThicknessB = Q('60cm') # thickness of the yoke iron
# this is just the iron now, real design has 10cm plates with 5cm gaps, total 85cm thick
Location      = [Q('0.cm'),Q('0.cm'),Q('0.cm')]
magGap        = Q('0.5cm')
magBGap       = Q('0.5cm')
actMaterial   = 'Copper' # coil is made of copper
actMaterialB  = 'Iron'
nMag          = 4
nMagB         = 8

##############################################
#ECAL with scintillator
##############################################

#Loading scintillator bar part in Active
[SB] # these are not actually made but the dimensions are used by SBPlane
class              = duneggd.Active.RectBarHalf.RectBarBuilder
actDimension       = [Q('2.5cm'), Q('3.2m'), Q('1cm')] # nominal dimensions of a scintillator bar
actMaterial        = 'Scintillator'
Sensitive          = 'SB'

# Loading the scintillator bar plane
[SBPlane]
subbuilders        = ['SB'] # doesn't use it.
class              = duneggd.Component.Plane.SBPlaneBuilder
compNElements         = 128
compDimension        = {SB:actDimension}
compSBPlaneMat         = 'epoxy_resin'
compScintBarMat        = 'Scintillator'
compRotation   = 'noRotate'

#Loading downstream ECAL
[ECALDownstream]
subbuilders   = ['SBPlane']
class         = duneggd.SubDetector.ECALMod.ECALModBuilder
# this builder makes a big block of lead and then displaces some of it with scintillator planes :(
modEcalMat       = 'Lead'
modScintMat      = 'Scintillator'
modEcalThickness = Q('70.5cm')
modLeadThickness = Q('1.75mm')
modNElements  = 60
zXtra            = Q('1.75mm') #what for? looks like an offset to move planes around inside of lead
# set to width of one lead plate to try and make a lead plate upstream of first scintillator plane
modRotPlaneOdd = 'r90aboutZ' # make odd planes measure y (strips run along x), even planes measure x


#Loading upstream ECAL based on downstream ECAL
[ECALUpstream]
subbuilders   = ['SBPlane']
class         = {ECALDownstream:class}
modEcalMat       = {ECALDownstream:modEcalMat}
modScintMat      = {ECALDownstream:modScintMat}
modEcalThickness = Q('21.6cm')
modLeadThickness = Q('3.5mm')
modNElements  = 16
zXtra=Q("0cm")
#nSBPlanes      = 1
#able to add "modRotPlaneEven" or "modRotPlaneEven"

#Loading ECal barrel SubDetector based on downstream ECAL
[ECALBarrelMod]
subbuilders    = ['SBPlane']
class          = {ECALDownstream:class}
modEcalMat        = {ECALDownstream:modEcalMat}
modScintMat       = {ECALDownstream:modScintMat}
modEcalThickness  = {ECALUpstream:modEcalThickness}
modLeadThickness  = {ECALUpstream:modLeadThickness}
modNElements      = {ECALUpstream:modNElements}
zXtra             = Q('0m')
modAltPlaneOrient = False
#able to add "modRotPlaneEven" or "modRotPlaneEven"

#Loading ECal barrel based on ECal barrel SubDetector
[ECALBarrel]
class            = duneggd.SubDetector.ECALBarrel.ECALBarrelBuilder
subbuilders      = ['ECALBarrelMod'] # stt so the SubDetectors can be placed around stt dim
modEcalMat          = 'Air'
modScintMat         = {ECALDownstream:modScintMat}
#modSTubeEndsToLead  = Q('8cm')
modSTubeEndsToLead  = Q('0cm')
modInnerDimension     = [Q('450cm'),Q('400cm'),Q('720cm')] # ends up being sttDimension in code...


##############################################
#RPC MuID
##############################################

#Loading RPC part in Active
[RPCPad]
class              = duneggd.Active.RPCPad.RPCPadBuilder
actRpcModDim    =[Q('20.0cm'),Q('10.0cm'),Q('1.5cm')]
actResiplateDim =[Q('19.6cm'),Q('9.6cm'),Q('0.3cm')]
actStripxDim     =[Q('0.765cm'),Q('9.6cm'),Q('0.35cm')]
actStripyDim     =[Q('19.6cm'),Q('0.75cm'),Q('0.35cm')]
#actRpcModDim    =[Q('600cm'),Q('600cm'),Q('1.5cm')]
#actResiplateDim =[Q('596cm'),Q('596cm'),Q('0.3cm')]
#actStripxDim     =[Q('0.765cm'),Q('596cm'),Q('0.35cm')]
#actStripyDim     =[Q('596cm'),Q('0.75cm'),Q('0.35cm')]
actGas_gap      =Q('0.2cm')
actRpcModMat          = 'Air'
actResiplateMat       = 'Bakelite'
actGasMat             = 'rpcGas'
actRpcReadoutMat      = 'Honeycomb'
Sensitive             = 'RPCPad'


# Loading the RPC SubDetector
[RPCMod]
subbuilders   = ['RPCPad']
class = duneggd.Component.RPCMod.RPCModBuilder
compRpcModDim  = {RPCPad:actRpcModDim}
compGas_gap      ={RPCPad:actGas_gap}
compResiplateDim =[Q('19.6cm'),Q('9.6cm'),Q('0.3cm')]
compStripxDim     =[Q('0.765cm'),Q('9.6cm'),Q('0.35cm')]
compStripyDim     =[Q('19.6cm'),Q('0.75cm'),Q('0.35cm')]
#compRpcModDim    =[Q('500cm'),Q('600cm'),Q('1.5cm')]
#compResiplateDim =[Q('496cm'),Q('596cm'),Q('0.3cm')]
#compStripxDim     =[Q('0.765cm'),Q('596cm'),Q('0.35cm')]
#compStripyDim     =[Q('596cm'),Q('0.75cm'),Q('0.35cm')]
compRotPlaneEven  ='noRotate'
compRotPlaneOdd   ='r90aboutZ'

# Yse RPC SubDetector to constitue RPC tray
# There are 5 different Tray configurations, they have different sizes to be chosen
[RPCTray_End]
subbuilders = ['RPCMod']
class = duneggd.Component.RPCTray.RPCTrayBuilder
#compDimension =[Q('60cm'), Q('20cm'), Q('1.5cm')]
compDimension =[Q('400cm'), Q('400cm'), Q('1.5cm')]
compMaterial ='Air'
#compNrpcCol = 3
#compNrpcRow = 2
compNrpcCol = 10
compNrpcRow = 20
compRotation = 'noRotate'

[RPCTray_BarBig]
subbuilders = ['RPCMod']
class = duneggd.Component.RPCTray.RPCTrayBuilder
#compDimension =[Q('400cm'), Q('310cm'), Q('4.0cm')]
compDimension =[Q('600cm'), Q('400cm'), Q('4.0cm')]
compMaterial ={RPCTray_End:compMaterial}
#compNrpcCol = 2
#compNrpcRow = 3
compNrpcCol = 29
compNrpcRow = 39
compRotation = 'noRotate'

[RPCTray_BarMidS]
subbuilders = ['RPCMod']
class = duneggd.Component.RPCTray.RPCTrayBuilder
#compDimension =[Q('400cm'), Q('280cm'), Q('4.0cm')]
compDimension =[Q('6000cm'), Q('1000cm'), Q('4.0cm')]
compMaterial ={RPCTray_End:compMaterial}
#compNrpcCol = 2
#compNrpcRow = 3
compNrpcCol = 18
compNrpcRow = 9
compRotation  = 'noRotate'

[RPCTray_BarMidF]
subbuilders = ['RPCMod']
class = duneggd.Component.RPCTray.RPCTrayBuilder
#compDimension =[Q('400cm'), Q('250cm'), Q('4.0cm')]
compDimension =[Q('6000cm'), Q('1000cm'), Q('4.0cm')]
compMaterial ={RPCTray_End:compMaterial}
#compNrpcCol = 2
#compNrpcRow = 3
compNrpcCol = 18
compNrpcRow = 9
compRotation = 'noRotate'

[RPCTray_BarSmall]
subbuilders = ['RPCMod']
class = duneggd.Component.RPCTray.RPCTrayBuilder
#compDimension =[Q('400cm'), Q('220cm'), Q('4.0cm')]
compDimension =[Q('6000cm'), Q('1000cm'), Q('4.0cm')]
compMaterial ={RPCTray_End:compMaterial}
#compNrpcCol = 2
#compNrpcRow = 3
compNrpcCol = 18
compNrpcRow = 9
compRotation = 'noRotate'


#Loading MuID barrel SubDetector
[MuIDBarrel]
subbuilders = ['RPCTray_BarSmall','RPCTray_BarMidF','RPCTray_BarMidS','RPCTray_BarBig']
#subbuilders = ['RPCTray_End']
class = duneggd.SubDetector.MuIDBarrel.MuIDBarrelBuilder
# Temp numbers:
modMagThickness = Q('50cm')
modMagSize = Q('500cm')
#magInDim   = [Q('4.5m'),Q('4m'),Q('7.2m')]
modMagInDim   = [Q('6m'),Q('6m'),Q('12m')]
# According to design numbers, should be:
#magThickness = Q('60cm')
#magInDim   = [ Q('4.5m'),Q('3.8m'),Q('6.8m')]
   # not the same as CDR inner dimensions
   # set so that inner dim of MuIDBarrel are 4.5 x 5 x 8
modSteelPlateThickness = Q('10cm')
modGap_tworpctrays=Q('10cm')
modAir_gap=Q('5cm')
modMuidInDim = [modMagInDim[0]+2*modMagThickness, modMagInDim[1]+2*modMagThickness, modMagInDim[2]+2*modMagThickness] #outer dim of magnet

#Loading MuID upstream SubDetector
[MuIDUpstream]
subbuilders = ['RPCTray_End']
class = duneggd.SubDetector.MuIDEnd.MuIDEndBuilder
modMuidDim = [Q('400cm'), Q('400cm'), Q('64.5cm')]
modSteelPlateDim = [Q('400cm'), Q('400cm'), Q('20cm')]
modNTraysPerPlane = 1
modNPlanes =  3
modMuidMat = 'Steel'
modMuidRot = 'noRotate'

#Loading MuID downstream SubDetector
[MuIDDownstream]
subbuilders = ['RPCTray_End']
class = duneggd.SubDetector.MuIDEnd.MuIDEndBuilder
modMuidDim = [Q('400cm'), Q('400cm'), Q('64.5cm')]
modSteelPlateDim = [Q('400cm'), Q('400cm'), Q('20cm')]
modNTraysPerPlane = 1
modNPlanes =  3
modMuidMat = {MuIDUpstream:modMuidMat}
modMuidRot = 'noRotate'
